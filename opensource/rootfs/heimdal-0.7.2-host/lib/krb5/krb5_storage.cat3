
KRB5_STORAGE(3)            UNIX Programmer's Manual            KRB5_STORAGE(3)

NNAAMMEE
     kkrrbb55__ssttoorraaggee, kkrrbb55__ssttoorraaggee__eemmeemm, kkrrbb55__ssttoorraaggee__ffrroomm__ddaattaa,
     kkrrbb55__ssttoorraaggee__ffrroomm__ffdd, kkrrbb55__ssttoorraaggee__ffrroomm__mmeemm, kkrrbb55__ssttoorraaggee__sseett__ffllaaggss,
     kkrrbb55__ssttoorraaggee__cclleeaarr__ffllaaggss, kkrrbb55__ssttoorraaggee__iiss__ffllaaggss,
     kkrrbb55__ssttoorraaggee__sseett__bbyytteeoorrddeerr, kkrrbb55__ssttoorraaggee__ggeett__bbyytteeoorrddeerr,
     kkrrbb55__ssttoorraaggee__sseett__eeooff__ccooddee, kkrrbb55__ssttoorraaggee__sseeeekk, kkrrbb55__ssttoorraaggee__rreeaadd,
     kkrrbb55__ssttoorraaggee__wwrriittee, kkrrbb55__ssttoorraaggee__ffrreeee, kkrrbb55__ssttoorraaggee__ttoo__ddaattaa,
     kkrrbb55__ssttoorree__iinntt3322, kkrrbb55__rreett__iinntt3322, kkrrbb55__ssttoorree__iinntt1166, kkrrbb55__rreett__iinntt1166,
     kkrrbb55__ssttoorree__iinntt88, kkrrbb55__rreett__iinntt88, kkrrbb55__ssttoorree__ddaattaa, kkrrbb55__rreett__ddaattaa,
     kkrrbb55__ssttoorree__ssttrriinngg, kkrrbb55__rreett__ssttrriinngg, kkrrbb55__ssttoorree__ssttrriinnggzz, kkrrbb55__rreett__ssttrriinnggzz,
     kkrrbb55__ssttoorree__pprriinncciippaall, kkrrbb55__rreett__pprriinncciippaall, kkrrbb55__ssttoorree__kkeeyybblloocckk,
     kkrrbb55__rreett__kkeeyybblloocckk, kkrrbb55__ssttoorree__ttiimmeess, kkrrbb55__rreett__ttiimmeess, kkrrbb55__ssttoorree__aaddddrreessss,
     kkrrbb55__rreett__aaddddrreessss, kkrrbb55__ssttoorree__aaddddrrss, kkrrbb55__rreett__aaddddrrss, kkrrbb55__ssttoorree__aauutthhddaattaa,
     kkrrbb55__rreett__aauutthhddaattaa, kkrrbb55__ssttoorree__ccrreeddss, kkrrbb55__rreett__ccrreeddss - operates on the
     Kerberos datatype krb5_storage

LLIIBBRRAARRYY
     Kerberos 5 Library (libkrb5, -lkrb5)

SSYYNNOOPPSSIISS
     struct krb5_storage;

     _k_r_b_5___s_t_o_r_a_g_e _*
     kkrrbb55__ssttoorraaggee__ffrroomm__ffdd(_i_n_t _f_d)

     _k_r_b_5___s_t_o_r_a_g_e _*
     kkrrbb55__ssttoorraaggee__eemmeemm(_v_o_i_d)

     _k_r_b_5___s_t_o_r_a_g_e _*
     kkrrbb55__ssttoorraaggee__ffrroomm__mmeemm(_v_o_i_d _*_b_u_f, _s_i_z_e___t _l_e_n)

     _k_r_b_5___s_t_o_r_a_g_e _*
     kkrrbb55__ssttoorraaggee__ffrroomm__ddaattaa(_k_r_b_5___d_a_t_a _*_d_a_t_a)

     _v_o_i_d
     kkrrbb55__ssttoorraaggee__sseett__ffllaaggss(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___f_l_a_g_s _f_l_a_g_s)

     _v_o_i_d
     kkrrbb55__ssttoorraaggee__cclleeaarr__ffllaaggss(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___f_l_a_g_s _f_l_a_g_s)

     _k_r_b_5___b_o_o_l_e_a_n
     kkrrbb55__ssttoorraaggee__iiss__ffllaaggss(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___f_l_a_g_s _f_l_a_g_s)

     _v_o_i_d
     kkrrbb55__ssttoorraaggee__sseett__bbyytteeoorrddeerr(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___f_l_a_g_s _b_y_t_e_o_r_d_e_r)

     _k_r_b_5___f_l_a_g_s
     kkrrbb55__ssttoorraaggee__ggeett__bbyytteeoorrddeerr(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___f_l_a_g_s _b_y_t_e_o_r_d_e_r)

     _v_o_i_d
     kkrrbb55__ssttoorraaggee__sseett__eeooff__ccooddee(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _i_n_t _c_o_d_e)

     _o_f_f___t
     kkrrbb55__ssttoorraaggee__sseeeekk(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _o_f_f___t _o_f_f_s_e_t, _i_n_t _w_h_e_n_c_e)

     _k_r_b_5___s_s_i_z_e___t
     kkrrbb55__ssttoorraaggee__rreeaadd(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _v_o_i_d _*_b_u_f, _s_i_z_e___t _l_e_n)

     _k_r_b_5___s_s_i_z_e___t
     kkrrbb55__ssttoorraaggee__wwrriittee(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _c_o_n_s_t _v_o_i_d _*_b_u_f, _s_i_z_e___t _l_e_n)


     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorraaggee__ffrreeee(_k_r_b_5___s_t_o_r_a_g_e _*_s_p)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorraaggee__ttoo__ddaattaa(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___d_a_t_a _*_d_a_t_a)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__iinntt3322(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _i_n_t_3_2___t _v_a_l_u_e)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__iinntt3322(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _i_n_t_3_2___t _*_v_a_l_u_e)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__iinntt1166(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _i_n_t_1_6___t _v_a_l_u_e)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__iinntt1166(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _i_n_t_1_6___t _*_v_a_l_u_e)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__iinntt88(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _i_n_t_8___t _v_a_l_u_e)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__iinntt88(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _i_n_t_8___t _*_v_a_l_u_e)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__ddaattaa(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___d_a_t_a _d_a_t_a)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__ddaattaa(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___d_a_t_a _*_d_a_t_a)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__ssttrriinngg(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _c_o_n_s_t _c_h_a_r _*_s)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__ssttrriinngg(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _c_h_a_r _*_*_s_t_r_i_n_g)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__ssttrriinnggzz(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _c_o_n_s_t _c_h_a_r _*_s)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__ssttrriinnggzz(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _c_h_a_r _*_*_s_t_r_i_n_g)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__pprriinncciippaall(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___p_r_i_n_c_i_p_a_l _p)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__pprriinncciippaall(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___p_r_i_n_c_i_p_a_l _*_p_r_i_n_c)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__kkeeyybblloocckk(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___k_e_y_b_l_o_c_k _p)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__kkeeyybblloocckk(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___k_e_y_b_l_o_c_k _*_p)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__ttiimmeess(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___t_i_m_e_s _t_i_m_e_s)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__ttiimmeess(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___t_i_m_e_s _*_t_i_m_e_s)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__aaddddrreessss(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___a_d_d_r_e_s_s _p)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__aaddddrreessss(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___a_d_d_r_e_s_s _*_a_d_r)


     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__aaddddrrss(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___a_d_d_r_e_s_s_e_s _p)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__aaddddrrss(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___a_d_d_r_e_s_s_e_s _*_a_d_r)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__aauutthhddaattaa(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___a_u_t_h_d_a_t_a _a_u_t_h)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__aauutthhddaattaa(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___a_u_t_h_d_a_t_a _*_a_u_t_h)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__ssttoorree__ccrreeddss(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___c_r_e_d_s _*_c_r_e_d_s)

     _k_r_b_5___e_r_r_o_r___c_o_d_e
     kkrrbb55__rreett__ccrreeddss(_k_r_b_5___s_t_o_r_a_g_e _*_s_p, _k_r_b_5___c_r_e_d_s _*_c_r_e_d_s)

DDEESSCCRRIIPPTTIIOONN
     The krb5_storage structure holds a storage element that is used for data
     manipulation.  The structure contains no public accessible elements.

     kkrrbb55__ssttoorraaggee__eemmeemm() create a memory based krb5 storage unit that dynam-
     icly resized to the ammount of data stored in.  The storage never returns
     errors, on memory allocation errors exit(3) will be called.

     kkrrbb55__ssttoorraaggee__ffrroomm__ddaattaa() create a krb5 storage unit that will read is da-
     ta from a krb5_data. There is no copy made of the _d_a_t_a, so the caller
     must not free _d_a_t_a until the storage is freed.

     kkrrbb55__ssttoorraaggee__ffrroomm__ffdd() create a krb5 storage unit that will read is data
     from a file descriptor.  The descriptor must be seekable if
     kkrrbb55__ssttoorraaggee__sseeeekk() is used.  Caller must not free the file descriptor
     before the storage is freed.

     kkrrbb55__ssttoorraaggee__ffrroomm__mmeemm() create a krb5 storage unit that will read is data
     from a memory region.  There is no copy made of the _d_a_t_a, so the caller
     must not free _d_a_t_a until the storage is freed.

     kkrrbb55__ssttoorraaggee__sseett__ffllaaggss() and kkrrbb55__ssttoorraaggee__cclleeaarr__ffllaaggss() modifies the be-
     havior of the storage functions.  kkrrbb55__ssttoorraaggee__iiss__ffllaaggss() tests if the
     _f_l_a_g_s are set on the krb5_storage. Valid flags to set, is and clear is
     are:

           KRB5_STORAGE_PRINCIPAL_WRONG_NUM_COMPONENTS
                       Stores the number of principal componets one too many
                       when storing principal namees, used for compatibility
                       with version 1 of file keytabs and version 1 of file
                       credential caches.
           KRB5_STORAGE_PRINCIPAL_NO_NAME_TYPE
                       Doesn't store the name type in when storing a principal
                       name, used for compatibility with version 1 of file
                       keytabs and version 1 of file credential caches.
           KRB5_STORAGE_KEYBLOCK_KEYTYPE_TWICE
                       Stores the keyblock type twice storing a keyblock, used
                       for compatibility version 3 of file credential caches.
           KRB5_STORAGE_BYTEORDER_MASK
                       bitmask that can be used to and out what type of byte
                       order order is used.
           KRB5_STORAGE_BYTEORDER_BE
                       Store integers in in big endian byte order, this is the
                       default mode.
           KRB5_STORAGE_BYTEORDER_LE


                       Store integers in in little endian byte order.
           KRB5_STORAGE_BYTEORDER_HOST
                       Stores the integers in host byte order, used for com-
                       patibility with version 1 of file keytabs and version 1
                       and 2 of file credential caches.
           KRB5_STORAGE_CREDS_FLAGS_WRONG_BITORDER
                       Store the credential flags in a krb5_creds in the re-
                       verse bit order.

     kkrrbb55__ssttoorraaggee__sseett__bbyytteeoorrddeerr() and kkrrbb55__ssttoorraaggee__ggeett__bbyytteeoorrddeerr() modifies
     the byte order used in the storage for integers.  The flags used is same
     as above.  The valid flags are KRB5_STORAGE_BYTEORDER_BE,
     KRB5_STORAGE_BYTEORDER_LE and KRB5_STORAGE_BYTEORDER_HOST.

     kkrrbb55__ssttoorraaggee__sseett__eeooff__ccooddee() sets the error code that will be returned on
     end of file condition to _c_o_d_e.

     kkrrbb55__ssttoorraaggee__sseeeekk() seeks _o_f_f_s_e_t bytes in the storage _s_p. The _w_h_e_n_c_e ar-
     gument is one of
           SEEK_SET  offset is from begining of storage.
           SEEK_CUR  offset is relative from current offset.
           SEEK_END  offset is from end of storage.

     kkrrbb55__ssttoorraaggee__rreeaadd() reads _l_e_n (or less bytes in case of end of file) into
     _b_u_f from the current offset in the storage _s_p.

     kkrrbb55__ssttoorraaggee__wwrriittee() writes _l_e_n or (less bytes in case of end of file)
     from _b_u_f from the current offset in the storage _s_p.

     kkrrbb55__ssttoorraaggee__ffrreeee() frees the storage _s_p.

     kkrrbb55__ssttoorraaggee__ttoo__ddaattaa() converts the data in storage _s_p into a krb5_data
     structure.  _d_a_t_a must be freed with kkrrbb55__ddaattaa__ffrreeee() by the caller when
     done with the _d_a_t_a.

     All krb5_store and krb5_ret functions move the current offset forward
     when the functions returns.

     kkrrbb55__ssttoorree__iinntt3322(), kkrrbb55__rreett__iinntt3322(), kkrrbb55__ssttoorree__iinntt1166(),
     kkrrbb55__rreett__iinntt1166(), kkrrbb55__ssttoorree__iinntt88(), and kkrrbb55__rreett__iinntt88() stores and reads
     an integer from _s_p in the byte order specified by the flags set on the
     _s_p.

     kkrrbb55__ssttoorree__ddaattaa() and kkrrbb55__rreett__ddaattaa() store and reads a krb5_data.  The
     length of the data is stored with kkrrbb55__ssttoorree__iinntt3322().

     kkrrbb55__ssttoorree__ssttrriinngg() and kkrrbb55__rreett__ssttrriinngg() store and reads a string by
     storing the length of the string with kkrrbb55__ssttoorree__iinntt3322() followed by the
     string itself.

     kkrrbb55__ssttoorree__ssttrriinnggzz() and kkrrbb55__rreett__ssttrriinnggzz() store and reads a string by
     storing string followed by a NUL.

     kkrrbb55__ssttoorree__pprriinncciippaall() and kkrrbb55__rreett__pprriinncciippaall() store and reads a princi-
     pal.

     kkrrbb55__ssttoorree__kkeeyybblloocckk() and kkrrbb55__rreett__kkeeyybblloocckk() store and reads a
     krb5_keyblock.

     kkrrbb55__ssttoorree__ttiimmeess() kkrrbb55__rreett__ttiimmeess() store and reads krb5_times structure
     .

     kkrrbb55__ssttoorree__aaddddrreessss() and kkrrbb55__rreett__aaddddrreessss() store and reads a
     krb5_address.


     kkrrbb55__ssttoorree__aaddddrrss() and kkrrbb55__rreett__aaddddrrss() store and reads a krb5_addresses.

     kkrrbb55__ssttoorree__aauutthhddaattaa() and kkrrbb55__rreett__aauutthhddaattaa() store and reads a
     krb5_authdata.

     kkrrbb55__ssttoorree__ccrreeddss() and kkrrbb55__rreett__ccrreeddss() store and reads a krb5_creds.

SSEEEE AALLSSOO
     krb5(3),  krb5_data(3),  kerberos(8)

 HEIMDAL                         May 10, 2005                                5
